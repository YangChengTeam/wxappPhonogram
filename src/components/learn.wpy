<style lang="less">
.learn-content {
  display:flex;
  align-items: center;
  justify-content: flex-start;
  width: 100%;
  height: 100%;
  flex-direction: column;
  margin-top: 70rpx;
}



.video-play image {
    width: 51rpx;
    height: 51rpx;
}

.learn-desp {
   width: 602rpx;
   height: 185rpx;
   position: relative;
   margin-top:40rpx;
}

.learn-desp > view {
  background-color:#ffd292;
  border-radius: 10px;
  width:95%;
  height:95%;
  position: absolute;
  margin-left:4%;
}

.learn-desp > view > scroll-view {
    display:inline-block;
    width: 70%;
    height:80%;
    margin-left: 150rpx;
    margin-right: 20rpx;
    margin-top: 20rpx;
    color: #000000;
    font-size: 27rpx;
}

.learn-desp > image {
    position: absolute;
    width:157rpx;
    height:185rpx;
    margin-top:10rpx;
}

.learn-word-info {
  display:flex;
  width:602rpx;
  height: 130rpx;
  margin-top:40rpx;
  align-items: center;
  justify-content: flex-start;
  flex-direction: row;
}

.learn-word-samples {
  display:flex;
  width:80%;
  height: 130rpx;
  align-items: center;
  justify-content: flex-start;
  flex-direction: row;
  flex-wrap: nowrap;
}

.learn-word-samples-en {
    font-size: 36rpx;

} 

.learn-word-samples-cn {
    font-size: 36rpx;
}

.learn-word-sample {
  display:flex;
  width: 100%;
  height: 130rpx;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}

.learn-word-sample > view > text {
   color : #ff0000;
}

.learn-word-sample > view {
   color: #999999
}


@keyframes learn-word-sample-animate
{
0%   {transform: scale(1.5,1.5);}
25%  {transform: scale(2.0,2.0);}
50%  {transform: scale(1.5,1.5);}
100% {transform: scale(1, 1);}
}
.learn-word-sample-animate {
    animation: learn-word-sample-animate 3s;
}

@keyframes learn-image-sample-animate
{
0%   {transform: scale(0.7,0.7);}
25%  {transform: scale(0.8,0.8);}
50%  {transform: scale(0.9,0.9);}
100% {transform: scale(1.0, 1.0);}
}


.learn-image-sample-animate {
    animation: learn-image-sample-animate 3s;
}

.key-video {
    position:absolute;
    width: 578rpx;
    height: 316rpx;
    margin: 13rpx;
}

</style>

<template>
   <main :canUseNumber.sync="canUseNumber" :vipPhoneticList.sync="vipPhoneticList" >
      <block class="image-item">
           <view class="learn-content" >
               <view class="video">
                   <image src="{{item.cover}}" class="video-cover"/>
                   <view class="video-play">
                     <image @tap="playVideo({{currentIndex}})" src="http://tic.upkao.com/Public/wxappImgs/video-play-btn.png" style=""></image>
                   </view>
               </view>
               <view class="learn-desp">
                   <view>
                       <scroll-view scroll-y="true">
                           {{item.desp}}
                       </scroll-view>
                   </view>
                   <image src="{{item.playingImg}}"  @tap="play({{currentIndex}})" />
               </view>
               <view class="learn-word-info">
                   <image src="{{item.img}}" class="{{item.sampleAnimation}}" @tap="playSample({{currentIndex}})" style="width:218rpx;height:126rpx" />
                   <view class="learn-word-samples">
                       <block wx:for="{{item.example}}"  wx:for-index="exampleIndex" wx:for-item="example" wx:key="id" class="image-item">
                          <view @tap="play({{currentIndex}}-{{exampleIndex}})" class="learn-word-sample{{example.animation}}">
                            <view class="learn-word-samples-en"><rich-text nodes="{{example.word_phonetic}}"></rich-text></view>
                            <view class="learn-word-samples-cn">{{example.word}}</view>
                          </view>
                       </block>
                   </view>
               </view>
           </view>
      </block>          
  </main>
</template>

<script>
  import wepy from 'wepy'
  import Main from '../components/main'
  import Common from '../mixins/common.js'
  export default class Learn extends wepy.component {
    data = {
        currntAudioSrc: '',
        audioType: 'desc',  //sample example
        currentExampleIndex: -1
    }

    components = {
       main: Main
    }

    mixins = [Common]

    methods = {
       //播放 文字
       play(idx, e){
        console.log(idx)
          this.resetPlayState()
           wepy.showLoading({
            title: '正在加载...'
         })
          if(idx.toString().indexOf('-') > -1){
             let idxs = idx.split('-')
             if(this.audioType == 'example' && this.currentIndex ==  parseInt(idxs[0]) && this.currentExampleIndex == parseInt(idxs[1])) {
                 return
             }
             this.audioType = 'example'
             this.currentIndex = parseInt(idxs[0])
             this.currentExampleIndex = parseInt(idxs[1])
             this.currntAudioSrc = this.vipPhoneticList[this.currentIndex]['example'][this.currentExampleIndex]['video']

          } else {
             if(this.audioType == 'desc' && this.currentIndex ==  parseInt(idx)) {
                 return
             }
             this.audioType = 'desc'
             this.currentIndex = parseInt(idx)
             this.currentExampleIndex = -1
             console.log(this.vipPhoneticList[parseInt(idx)])
             this.currntAudioSrc = this.vipPhoneticList[parseInt(idx)]['desp_audio']
             
          } 
          if(this.currntAudioSrc){
              this.$parent.play(this.currntAudioSrc)
          } else {
              wepy.hideLoading()
              wepy.showToast({
                  title: '音频文件不存在',
                  icon: 'none'
              })
          }
       },
       //播放 图片
       playSample(index, e){ 
            if(this.audioType == 'sample' && this.currentIndex ==  parseInt(index)) {
                 return
            }
            this.resetPlayState()
               wepy.showLoading({
               title: '正在加载...'
           })
            this.audioType = 'sample'
            this.currentIndex = index
            this.currntAudioSrc = this.vipPhoneticList[index]['voice']
            this.$parent.play(this.currntAudioSrc)
       }
    }

    resetPlayState(){
       if(this.currentIndex == -1){
           return
       }
       if(this.audioType == "example"){
           this.vipPhoneticList[this.currentIndex]['example'][this.currentExampleIndex]['animation'] = ''
       } else if(this.audioType == 'sample'){
           this.vipPhoneticList[this.currentIndex].sampleAnimation = ""
       } else if(this.audioType == 'desc'){
           this.vipPhoneticList[this.currentIndex].playingImg = "/images/click2read.png"
       }
       this.$apply()
       this.$parent.stop()
       this.audioType = ''
       
    }

    //播放音频
    playing(){
       wepy.hideLoading()
       if(this.audioType == "example"){
           this.vipPhoneticList[this.currentIndex]['example'][this.currentExampleIndex]['animation'] = ' learn-word-sample-animate'
       } else if(this.audioType == 'sample'){
          this.vipPhoneticList[this.currentIndex].sampleAnimation = "learn-image-sample-animate"
       } else if(this.audioType == 'desc'){
           this.vipPhoneticList[this.currentIndex].playingImg = "http://tic.upkao.com/Public/wxappImgs/reading.gif"
       }
       this.$apply()
    }

    //音频播放结束
    playEnd(){
      this.resetPlayState()      
    }

    onLoad () {
       this.isShowContent = true
    }
  }
</script>
